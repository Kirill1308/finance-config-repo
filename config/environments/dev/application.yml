eureka:
  client:
    serviceUrl:
      defaultZone: ${EUREKA_URL:http://localhost:8761/eureka/}

spring:
  cloud:
    openfeign:
      circuitbreaker:
        enabled: true
  kafka:
    bootstrap-servers: ${KAFKA_SERVERS:localhost:9092}
    consumer:
      group-id: ${spring.application.name}
      auto-offset-reset: earliest
      properties:
        spring.json.trusted.packages: com.popov.*
    producer:
      properties:
        spring.json.add.type.headers: false
    listener:
      ack-mode: MANUAL_IMMEDIATE
      concurrency: 3

feign:
  client:
    config:
      default:
        connectTimeout: 5000
        readTimeout: 5000
        loggerLevel: full
  services:
    subscription:
      name: finance-subscription-service
      url: ${SUBSCRIPTION_SERVICE_URL:http://localhost:8082}
    user:
      name: finance-user-service
      url: ${USER_SERVICE_URL:http://localhost:8083}
    payment:
      name: finance-payment-service
      url: ${PAYMENT_SERVICE_URL:http://localhost:8084}
    wallet:
      name: finance-wallet-service
      url: ${WALLET_SERVICE_URL:http://localhost:8086}

resilience4j:
  circuitbreaker:
    instances:
      default:
        slidingWindowSize: 10
        failureRateThreshold: 50
        waitDurationInOpenState: 20s
        permittedNumberOfCallsInHalfOpenState: 3
  retry:
    instances:
      default:
        maxAttempts: 3
        waitDuration: 1s
        enableExponentialBackoff: true
        exponentialBackoffMultiplier: 2

redis:
  host: ${REDIS_HOST:localhost}
  port: ${REDIS_PORT:6379}
  database: 0
  timeout: 60000

logging:
  level:
    com.popov: DEBUG

cors:
  allowed-origins: 'http://localhost:3000'
