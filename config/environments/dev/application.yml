eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
    instance:
      hostname: localhost

feign:
  client:
    config:
      default:
        connectTimeout: 5000
        readTimeout: 5000
        loggerLevel: full
  circuitbreaker:
    enabled: true
    group:
      enabled: true

services:
  subscription:
    name: finance-subscription-service
    url: http://localhost:8082
  user:
    name: finance-user-service
    url: http://localhost:8083
  payment:
    name: finance-payment-service
    url: http://localhost:8084
  wallet:
    name: finance-wallet-service
    url: http://localhost:8086

spring:
  cloud:
    openfeign:
      circuitbreaker:
        enabled: true
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: ${spring.application.name}
      auto-offset-reset: earliest
      properties:
        spring.json.trusted.packages: com.popov.*
    producer:
      properties:
        spring.json.add.type.headers: false
    listener:
      ack-mode: MANUAL_IMMEDIATE
      concurrency: 3

resilience4j:
  circuitbreaker:
    default:
      slidingWindowSize: 10
      failureRateThreshold: 50
      waitDurationInOpenState: 20s
      permittedNumberOfCallsInHalfOpenState: 3
    instances:
      finance-subscription-service: { }
      finance-user-service: { }
      finance-payment-service: { }

  retry:
    default:
      maxAttempts: 3
      waitDuration: 1s
      enableExponentialBackoff: true
      exponentialBackoffMultiplier: 2
    instances:
      finance-subscription-service: { }
      finance-user-service: { }
      finance-payment-service: { }

redis:
  host: localhost
  port: 6379
  database: 0
  timeout: 60000

logging:
  level:
    com.popov: DEBUG